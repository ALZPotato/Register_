@model MyRegistrationApp.Models.ProductViewModel
@{
    ViewBag.Title = "Chỉnh Sửa Sản Phẩm";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2><i class="fas fa-edit"></i> @ViewBag.Title: <small>@Model.ProductName</small></h2>
<hr />

@using (Html.BeginForm("EditProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProductID)
    @Html.HiddenFor(model => model.CurrentImageFileName) @* Để giữ lại tên ảnh cũ nếu không có ảnh mới *@

    if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <strong>Vui lòng sửa các lỗi sau:</strong>
            @Html.ValidationSummary(false, "", new { @class = "validation-summary-list" })
        </div>
    }

    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, 10, 3, new { @class = "form-control", id = "productDescriptionEditor" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", type = "number", step = "1000", min = "0" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
            @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoryID, "Danh Mục", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CategoryID, Model.CategoryOptions, "-- Chọn Danh Mục --", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CurrentImageFileName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (!string.IsNullOrEmpty(Model.CurrentImageFileName))
            {
                <img src="@Url.Content("~/Uploads/ProductImages/" + Model.CurrentImageFileName)" alt="Ảnh hiện tại của @Model.ProductName" class="img-thumbnail" style="max-width: 150px; margin-bottom: 10px;" />
                <p><em>@Model.CurrentImageFileName</em></p>
            }
            else
            {
                <p><em>Sản phẩm này hiện chưa có ảnh.</em></p>
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="ProductImageFile" id="ProductImageFile" class="form-control-file" accept="image/jpeg,image/png,image/gif" />
            @Html.ValidationMessageFor(model => model.ProductImageFile, "", new { @class = "text-danger" })
            <span class="help-block">Để trống nếu không muốn thay đổi ảnh. Nếu bạn chọn ảnh mới, ảnh cũ sẽ bị xóa (nếu có).</span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox" style="padding-top:7px;">
                @Html.EditorFor(model => model.IsActive)
            </div>
            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Lưu Thay Đổi</button>
            @Html.ActionLink("Hủy", "Products", null, new { @class = "btn btn-default", style = "margin-left:10px;" })
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @* Script cho Rich Text Editor nếu có *@
}