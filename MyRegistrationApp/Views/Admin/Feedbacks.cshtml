@model IEnumerable<MyRegistrationApp.CustomerFeedback>
@{
    ViewBag.Title = "Quản Lý Phản Hồi Khách Hàng";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

@if (TempData["AdminMessage"] != null)
{
    <div class="alert alert-success">@TempData["AdminMessage"]</div>
}
@if (TempData["AdminError"] != null)
{
    <div class="alert alert-danger">@TempData["AdminError"]</div>
}

@* Form tìm kiếm *@
@using (Html.BeginForm("Feedbacks", "Admin", FormMethod.Get, new { @class = "form-inline", style = "margin-bottom:20px;" }))
{
    <div class="form-group">
        @Html.Label("Tìm kiếm:", new { @class = "sr-only" })
        @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Nhập từ khóa..." })
    </div>
    <button type="submit" class="btn btn-default">Tìm</button>
    @Html.ActionLink("Xóa bộ lọc", "Feedbacks", new { sortOrder = ViewBag.CurrentSort }, new { @class = "btn btn-info", style = "margin-left:5px;" })
}


<table class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Người Gửi", "Feedbacks", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>Email</th>
            <th>
                @Html.ActionLink("Loại Phản Hồi", "Feedbacks", new { sortOrder = ViewBag.TypeSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>Tiêu Đề</th>
            <th>
                @Html.ActionLink("Ngày Gửi", "Feedbacks", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>Ảnh Đính Kèm</th>
            <th>Đã Giải Quyết</th>
            <th>Hành Động</th>
        </tr>
    </thead>
    <tbody>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="8" class="text-center">Không có phản hồi nào.</td>
            </tr>
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.FeedbackType)</td>
                <td>@Html.DisplayFor(modelItem => item.Subject)</td>
                <td>@item.SubmittedDate.ToString("dd/MM/yyyy HH:mm")</td>
                <td>
                    @if (!string.IsNullOrEmpty(item.AttachedImageFileName))
                    {
                        <a href="@Url.Content("~/Uploads/FeedbackImages/" + item.AttachedImageFileName)" target="_blank">
                            <i class="fas fa-image"></i> Xem ảnh
                        </a>
                    }
                    else
                    {
                        <text>Không có</text>
                    }
                </td>
                <td>
                    @using (Html.BeginForm("MarkAsResolved", "Admin", FormMethod.Post, new { style = "display:inline;" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("feedbackId", item.FeedbackID)
                        @Html.Hidden("isResolved", !item.IsResolved) // Giá trị ngược lại để toggle
                        if (item.IsResolved)
                        {
                            <button type="submit" class="btn btn-success btn-xs" title="Đánh dấu là Chưa giải quyết">
                                <i class="fas fa-check-circle"></i> Đã giải quyết
                            </button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-warning btn-xs" title="Đánh dấu là Đã giải quyết">
                                <i class="fas fa-times-circle"></i> Chưa giải quyết
                            </button>
                        }
                    }
                </td>
                <td>
                    @Html.ActionLink("Chi tiết", "FeedbackDetails", new { id = item.FeedbackID }, new { @class = "btn btn-info btn-xs" })
                    @* Thêm link Xóa nếu cần *@
                </td>
            </tr>
        }
    </tbody>
</table>

@* Phần hiển thị Paging Control nếu dùng PagedList.Mvc *@
@*
    @if (Model is PagedList.IPagedList)
    {
        <br />
        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) của @Model.PageCount
        @Html.PagedListPager((PagedList.IPagedList)Model, page => Url.Action("Feedbacks",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    }
*@