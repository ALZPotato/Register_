@model MyRegistrationApp.Models.ProductsViewModel

@{
    ViewBag.Title = ViewBag.Title ?? "Sản Phẩm - The Coffee"; // Đảm bảo ViewBag.Title có giá trị
    Layout = "~/Views/Shared/_Layout.cshtml"; // Sử dụng layout chung

    string currentRouteCategoryName = ViewContext.RouteData.Values["categoryName"] as string;
}

@* Đặt CSS đặc thù của trang Products vào đây *@
@section styles {
    <style>
        /* === CSS ĐẶC THÙ CHO TRANG SẢN PHẨM === */
        /* Bạn có thể đổi tên class để tránh xung đột nếu Site.css đã có style tương tự */
        .page-title-products {
            text-align: center;
            padding: 30px 0 20px 0;
            background-color: #f1edea; /* Màu nền nhẹ cho tiêu đề trang */
            margin-bottom: 30px; /* Khoảng cách với phần dưới */
            /* border-bottom: 1px solid #e0d9d0; /* Tùy chọn */
        }

            .page-title-products h1 {
                font-size: 2.5em; /* Điều chỉnh cho phù hợp với layout */
                margin-bottom: 5px;
                /* color: #4A3B31; /* Đã có trong Site.css cho h1 chung */
            }
        /* Nếu bạn có breadcrumb, style nó ở đây hoặc trong Site.css */

        .products-page-container {
            display: flex;
            flex-wrap: wrap; /* Cho phép sidebar và content xuống hàng trên mobile */
            gap: 30px; /* Khoảng cách giữa sidebar và content */
            margin-bottom: 30px;
        }

        /* Sidebar Danh Mục */
        .category-sidebar {
            flex: 1 1 250px; /* Cho phép co giãn nhưng có kích thước cơ bản */
            max-width: 280px; /* Giới hạn trên desktop */
            background-color: #fff;
            padding: 20px;
            border-radius: 6px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.07);
            height: fit-content;
            border: 1px solid #eae0d1;
        }

            .category-sidebar h3 {
                font-size: 1.4em;
                margin-top: 0;
                margin-bottom: 20px;
                padding-bottom: 10px;
                border-bottom: 2px solid #8B5A2B; /* Màu nhấn của thương hiệu */
                /* color: #4A3B31; /* Đã có trong Site.css cho h3 chung */
            }

                .category-sidebar h3 i {
                    margin-right: 8px;
                    color: #8B5A2B;
                }


            .category-sidebar ul {
                list-style: none;
                padding: 0;
                margin: 0;
            }

                .category-sidebar ul li {
                    margin-bottom: 8px;
                }

                    .category-sidebar ul li a {
                        text-decoration: none;
                        color: #555; /* Màu chữ mặc định cho link danh mục */
                        font-size: 1em;
                        padding: 10px 12px;
                        display: block;
                        border-radius: 4px;
                        transition: background-color 0.2s ease, color 0.2s ease, padding-left 0.2s ease;
                        border-left: 3px solid transparent; /* Hiệu ứng active/hover */
                    }

                        .category-sidebar ul li a:hover {
                            background-color: #f7f2e9; /* Màu kem nhạt khi hover */
                            color: #4A3B31; /* Màu chữ đậm hơn khi hover */
                            padding-left: 15px; /* Dịch vào một chút */
                            border-left-color: #D2B48C; /* Màu tan cho border */
                        }

                        .category-sidebar ul li a.active { /* Class 'active' cho danh mục đang chọn */
                            background-color: #8B5A2B; /* Màu nâu cà phê */
                            color: #fff !important; /* Quan trọng để ghi đè màu link mặc định */
                            font-weight: 600;
                            padding-left: 15px;
                            border-left-color: #4A3B31; /* Nâu đậm cho border */
                        }

        /* Khu vực hiển thị sản phẩm */
        .products-main-content {
            flex: 3 1 600px; /* Chiếm phần lớn hơn và cho phép co giãn */
        }

        /* CSS CHO GRID SẢN PHẨM THỰC TẾ (thay thế .product-list-placeholder) */
        .product-grid-user {
            display: flex;
            flex-wrap: wrap;
            gap: 20px; /* Khoảng cách giữa các sản phẩm */
        }

        .product-item-user {
            background-color: #fff;
            border: 1px solid #eae0d1;
            border-radius: 6px;
            box-shadow: 0 2px 5px rgba(0,0,0,0.05);
            /* Chiều rộng sẽ được tính toán dựa trên số cột bạn muốn và gap */
            /* Ví dụ cho 3 cột với gap 20px: width: calc(33.333% - 13.33px); */
            /* Hoặc dùng Bootstrap grid system nếu layout của bạn có */
            width: 100%; /* Mặc định cho mobile, sẽ override bằng media query */
            margin-bottom: 20px; /* Để có khoảng cách nếu không dùng gap */
            overflow: hidden;
            transition: box-shadow 0.3s ease;
            display: flex;
            flex-direction: column;
        }

            .product-item-user:hover {
                box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            }

            .product-item-user .product-image-link img {
                width: 100%;
                height: 220px;
                object-fit: cover;
                display: block;
            }

            .product-item-user .product-details {
                padding: 15px;
                text-align: center;
                flex-grow: 1;
                display: flex;
                flex-direction: column;
                justify-content: space-between;
            }

            .product-item-user .product-name a {
                font-family: 'Playfair Display', serif;
                font-size: 1.2em;
                color: #4A3B31;
                text-decoration: none;
                font-weight: 600;
                display: block; /* Để giới hạn dòng nếu tên quá dài */
                min-height: 2.4em; /* Chiều cao cho 2 dòng tên sản phẩm */
                line-height: 1.2em;
                overflow: hidden;
                text-overflow: ellipsis;
                /* Kỹ thuật giới hạn 2 dòng:
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            */
            }

                .product-item-user .product-name a:hover {
                    color: #8B5A2B;
                }

            .product-item-user .product-price {
                font-size: 1.3em;
                color: #8B5A2B;
                font-weight: 700;
                margin: 8px 0;
            }

            .product-item-user .product-actions .btn { /* Style chung cho các nút trong product card */
                background-color: #8B5A2B;
                color: white !important;
                text-decoration: none;
                padding: 8px 15px;
                border-radius: 4px;
                font-size: 0.9em;
                margin-top: 10px;
                display: inline-block;
                transition: background-color 0.2s ease;
                border: none;
                margin-left: 5px; /* Khoảng cách giữa các nút */
            }

                .product-item-user .product-actions .btn:first-child {
                    margin-left: 0;
                }

                .product-item-user .product-actions .btn:hover {
                    background-color: #7A4D22;
                }

            .product-item-user .product-actions .btn-view-detail-user { /* Class riêng nếu cần */
                /* background-color: #some-other-color; */
            }

            .product-item-user .product-actions .btn-add-to-cart-user {
                background-color: #5cb85c;
            }

                .product-item-user .product-actions .btn-add-to-cart-user:hover {
                    background-color: #4cae4c;
                }


        /* Responsive cho grid sản phẩm và layout trang products */
        @@media (min-width: 992px) { /* Desktop */
            .product-item-user {
                width: calc(33.333% - 14px); /* 3 sản phẩm/hàng, trừ đi (gap * 2/3) */
            }
        }

        @@media (min-width: 768px) and (max-width: 991px) { /* Tablet */
            .product-item-user {
                width: calc(50% - 10px); /* 2 sản phẩm/hàng */
            }
        }

        @@media (max-width: 767px) { /* Mobile */
            .products-page-container {
                flex-direction: column;
                gap: 20px;
            }

            .category-sidebar {
                max-width: 100%; /* Sidebar chiếm full width */
                margin-bottom: 20px;
            }

            .page-title-products h1 {
                font-size: 2em !important; /* Ghi đè nếu Site.css có style mạnh hơn */
            }

            .product-item-user {
                width: 100%; /* 1 sản phẩm/hàng */
            }
        }
    </style>
}

@* --- BẮT ĐẦU NỘI DUNG HTML CỦA TRANG PRODUCTS --- *@
<div class="page-title-products">
    <div class="container">
        @* Container này sẽ được style bởi Site.css *@
        <h1>@(Model.CurrentCategoryName ?? ViewBag.Title)</h1> @* Ưu tiên CurrentCategoryName từ ViewModel *@
    </div>
</div>

<div class="container products-page-container">
    @* Container này sẽ được style bởi Site.css *@
    <!-- Sidebar Danh Mục -->
    <aside class="category-sidebar">
        <h3><i class="fas fa-tags"></i> Danh Mục Sản Phẩm</h3>
        @if (Model != null && Model.Categories != null && Model.Categories.Any())
        {
            <ul>
                <li>
                    <a href="@Url.Action("Products", "Home", new { categoryName = (string)null })"
                       class="@(string.IsNullOrEmpty(currentRouteCategoryName) ? "active" : "")">
                        Tất Cả Sản Phẩm
                    </a>
                </li>
                @foreach (var category in Model.Categories)
                {
                    if (category != null && !string.IsNullOrEmpty(category.CategoryName))
                    {
                        string friendlyUrlCategoryName = category.CategoryName.Replace(" ", "-");
                        bool isActive = false;
                        if (!string.IsNullOrEmpty(currentRouteCategoryName))
                        {
                            isActive = currentRouteCategoryName.Equals(friendlyUrlCategoryName, StringComparison.OrdinalIgnoreCase);
                        }
                        <li>
                            <a href="@Url.Action("Products", "Home", new { categoryName = friendlyUrlCategoryName })" class="@(isActive ? "active" : "")">
                                @category.CategoryName
                            </a>
                        </li>
                    }
                }
            </ul>
        }
        else
        {
            <p>Chưa có danh mục nào.</p>
        }
    </aside>

    <!-- Nội dung chính hiển thị sản phẩm -->
    <main class="products-main-content">
        @if (Model != null && Model.ProductsToList != null && Model.ProductsToList.Any())
        {
            <div class="product-grid-user">
                @foreach (var product in Model.ProductsToList)
                {
                   <div class="product-item-user">
                       @* Link ở ảnh *@
                       <a href="@Url.Action("ProductDetail", "Home", new { id = product.ProductID })" class="product-image-link">
                           @if (!string.IsNullOrEmpty(product.ImageFileName))
                           {
                               <img src="@Url.Content("~/Uploads/ProductImages/" + product.ImageFileName)" alt="@product.ProductName" />
                           }
                           else
                           {
                               <img src="@Url.Content("~/Content/Images/placeholder-product.png")" alt="Chưa có ảnh" /> @* Đảm bảo có ảnh này *@
                           }
                       </a>
                       <div class="product-details">
                           <div>
                               <h4 class="product-name">
                                   @* Link ở tên sản phẩm *@
                                   <a href="@Url.Action("ProductDetail", "Home", new { id = product.ProductID })">@product.ProductName</a>
                               </h4>
                               <p class="product-price">@string.Format("{0:N0} VNĐ", product.Price)</p>
                           </div>
                           <div class="product-actions">
                               @* Link ở nút "Xem Chi Tiết" *@
                               <a href="@Url.Action("ProductDetail", "Home", new { id = product.ProductID })" class="btn btn-view-detail-user"><i class="fas fa-eye"></i> Chi Tiết</a>
                               @if (Request.IsAuthenticated)
                               {
                                   @* Nếu ĐÃ đăng nhập, hiển thị form AddToCart bình thường *@
                                   @* Form này sẽ gửi một request POST, an toàn hơn là dùng link GET *@
                                   using (Html.BeginForm("AddToCart", "Cart", new { productId = product.ProductID, quantity = 1 }, FormMethod.Post, new { @style = "display:inline;" }))
                                   {
                                       @Html.AntiForgeryToken()
                                       <button type="submit" class="btn btn-add-to-cart-user" title="Thêm vào giỏ hàng">
                                           <i class="fas fa-cart-plus"></i> Thêm Vào Giỏ
                                       </button>
                                   }
                               }
                               else
                               {
                                   @* Nếu CHƯA đăng nhập, hiển thị một link trỏ đến trang Đăng nhập *@
                                   <a href="@Url.Action("Login", "Account", new { returnUrl = Request.Url.PathAndQuery })" class="btn btn-add-to-cart-user" title="Đăng nhập để thêm vào giỏ">
                                       <i class="fas fa-cart-plus"></i> Thêm Vào Giỏ
                                   </a>
                               }
                           </div>
                       </div>
                   </div>
                }
            </div>
        }
        else
        {
            <div class="product-list-placeholder">
                @* Giữ lại placeholder nếu không có sản phẩm *@
                <p>
                    <i class="fas fa-coffee fa-3x"></i><br>
                    @if (!string.IsNullOrEmpty(currentRouteCategoryName))
                    {
                        var currentDisplayCat = Model.Categories.FirstOrDefault(c =>
                            c != null && !string.IsNullOrEmpty(c.CategoryName) &&
                            c.CategoryName.Replace(" ", "-").Equals(currentRouteCategoryName, StringComparison.OrdinalIgnoreCase)
                        );
                        if (currentDisplayCat != null)
                        {
                            <text>Hiện chưa có sản phẩm nào trong danh mục: <strong>@currentDisplayCat.CategoryName</strong>.</text>
                        }
                        else
                        {
                            <text>Hiện chưa có sản phẩm nào cho danh mục <strong>"@currentRouteCategoryName.Replace("-", " ")"</strong>.</text>
                        }
                    }
                    else
                    {
                        <text>Hiện chưa có sản phẩm nào.</text>
                    }
                    <br>Vui lòng quay lại sau!
                </p>
            </div>
        }
    </main>
</div>
@* --- KẾT THÚC NỘI DUNG HTML CỦA TRANG PRODUCTS --- *@


@section scripts {
    <script type="text/javascript">
        // console.log("Trang Products đã tải script riêng.");
    </script>
}